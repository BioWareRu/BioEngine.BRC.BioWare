@using System.Globalization
@using BioEngine.Core.Site.Features
@using BioEngine.Core.Site.Model
@model BioEngine.Core.Site.Model.ContentViewModel<BioEngine.Core.Entities.Post>
@inject PageFeaturesCollection FeaturesCollection

<div class="card mb-4 post">
    <div class="card-body">
        <div class="author">
            <img src="@Model.Item.Author.PhotoUrl" alt="@Model.Item.Author.Name"/> @Model.Item.Author.Name
            <time datetime="@Model.Item.DateAdded.DateTime.ToString("yyyy-MM-dd hh:mm:ss")">
                @Model.Item.DateAdded.DateTime.ToString("dd.MM.yyyy HH:mm:ss", CultureInfo.InvariantCulture)</time>
        </div>

        <h2 class="card-title">

            @switch (Model.Mode)
            {
                case ContentViewMode.Short:
                    <a class="article-list__permalink" href="@Model.Item.PublicUrl">@Model.Item.Title</a>
                    break;
                case ContentViewMode.Full:
                    @Model.Item.Title
                    break;
                default:
                    throw new ArgumentOutOfRangeException();
            }
        </h2>
        <div class="sections">
            @Html.Raw(string.Join(", ", Model.Item.Sections.Select(section => $"<a href=\"{section.PublicUrl}\">{section.Title}</a>")))
        </div>
        @{
            await Html.RenderPartialAsync("Blocks/Blocks", new ContentEntityViewModel(Model.Item, Model.Mode));
        }
        @if (Model.Item.Tags.Any())
        {
            <div class="tags">
                Тэги:

                @Html.Raw(string.Join(", ", Model.Item.Tags.Select(tag => $"<a href=\"/posts/tag/{tag.Name}\">{tag.Name}</a>")))
            </div>
        }

        <footer class="article-list__footer">
            <div class="article-list__footer-controls">
                @{
                    var commentsCountFeature = FeaturesCollection.GetFeature<ICommentsCountFeature>(Model.Item);
                    if (commentsCountFeature != null)
                    {
                        <a class="article-list__comments" href="@commentsCountFeature.CommentsUrl">@Html.Raw(commentsCountFeature.CommentsCountString)</a>
                    }
                }
            </div>
        </footer>
    </div>
</div>

@*<article class="article-list__item">
    <header class="article-list__header">
        <div class="article-list__title-wrap">
            <h2 class="article-list__title">
                @switch (Model.Mode)
                {
                    case ContentViewMode.Short:
                        <a class="article-list__permalink" href="@Model.Item.PublicUrl">@Model.Item.Title</a>
                        break;
                    case ContentViewMode.Full:
                        @Model.Item.Title
                        break;
                    default:
                        throw new ArgumentOutOfRangeException();
                }
            </h2>
            <time class="article-list__date"
                  datetime="@Model.Item.DateAdded.DateTime.ToString("yyyy-MM-dd hh:mm:ss")">
                @Model.Item.DateAdded.DateTime.ToString("dd.MM.yyyy HH:mm:ss", CultureInfo.InvariantCulture),&nbsp;@Model.Item.Author.Name</time>
        </div>
    </header>
    <div class="b-text">
        
    </div>
    <footer class="article-list__footer">


        <div class="article-list__footer-controls">
            @{
                var ipbFeature = FeaturesCollection.GetFeature<IPBPageFeature>(Model.Item);
                if (ipbFeature != null)
                {
                    <a class="article-list__comments" href="@ipbFeature.CommentsUrl">@Html.Raw(ipbFeature.CommentsCountString)</a>
                }
            }

        </div>
    </footer>
</article>*@
